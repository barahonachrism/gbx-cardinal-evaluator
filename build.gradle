plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "3.4.0.2513"
}

java{
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

sonarqube {
    properties {
        property "sonar.projectKey", "barahonachrism_globantx-cardinal-evaluator"
        property "sonar.organization", "barahonachrism"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

group 'com.gbx'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    annotationProcessor(
            "org.projectlombok:lombok"
    )

    compileOnly 'org.projectlombok:lombok'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testImplementation 'io.cucumber:cucumber-java'
    testImplementation 'io.cucumber:cucumber-spring'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine'
    testImplementation 'org.junit.platform:junit-platform-suite'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom 'io.cucumber:cucumber-bom:7.2.3'
    }
    dependencies{
        dependency 'org.projectlombok:lombok:1.18.24'
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [])
        }))
    }
    dependsOn test // tests are required to run before generating the
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}


bootBuildImage{
    imageName "barahonachrism/gbx-cardinal-evaluator:${version}"
}